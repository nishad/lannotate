{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { decode, encode } from '@msgpack/msgpack'\nimport type { AnyOrama } from '@orama/orama'\nimport { create, load, save } from '@orama/orama'\nimport type { PersistenceFormat, Runtime } from './types.js'\n// @ts-expect-error dpack does not expose types\nimport * as dpack from 'dpack'\nimport { METHOD_MOVED, UNSUPPORTED_FORMAT } from './errors.js'\nimport { detectRuntime } from './utils.js'\n\nconst hexFromMap: Record<string, number> = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15\n}\nconst hexToMap = Object.keys(hexFromMap)\n\n/* c8 ignore next 13 */\nfunction slowHexToBuffer(hex: string): Uint8Array {\n  const bytes = new Uint8Array(Math.floor(hex.length / 2))\n\n  hex = hex.toLowerCase()\n  for (let i = 0; i < hex.length; i++) {\n    const a = hexFromMap[hex[i * 2]]\n    const b = hexFromMap[hex[i * 2 + 1]]\n    if (a === undefined || b === undefined) {\n      break\n    }\n    bytes[i] = (a << 4) | b\n  }\n  return bytes\n}\n\n/* c8 ignore next 5 */\nfunction slowHexToString(bytes: Uint8Array): string {\n  return Array.from(bytes || [])\n    .map((b) => hexToMap[b >> 4] + hexToMap[b & 15])\n    .join('')\n}\n\nexport async function persist<T extends AnyOrama>(\n  db: T,\n  format: PersistenceFormat = 'binary',\n  runtime?: Runtime\n): Promise<string | Buffer> {\n  if (!runtime) {\n    runtime = detectRuntime()\n  }\n\n  const dbExport = await save(db)\n  let serialized: string | Buffer\n\n  switch (format) {\n    case 'json':\n      serialized = JSON.stringify(dbExport)\n      break\n    case 'dpack':\n      serialized = dpack.serialize(dbExport)\n      break\n    case 'binary': {\n      const msgpack = encode(dbExport)\n      if (runtime === 'node') {\n        serialized = Buffer.from(msgpack.buffer, msgpack.byteOffset, msgpack.byteLength)\n        serialized = serialized.toString('hex')\n        /* c8 ignore next 3 */\n      } else {\n        serialized = slowHexToString(msgpack)\n      }\n    }\n    break\n    default:\n      throw new Error(UNSUPPORTED_FORMAT(format))\n  }\n\n  return serialized\n}\n\nexport async function restore<T extends AnyOrama>(\n  format: PersistenceFormat,\n  data: string | Buffer,\n  runtime?: Runtime\n): Promise<T> {\n  if (!runtime) {\n    runtime = detectRuntime()\n  }\n\n  const db = await create({\n    schema: {\n      __placeholder: 'string'\n    }\n  })\n  let deserialized: any\n\n  switch (format) {\n    case 'json':\n      deserialized = JSON.parse(data.toString())\n      break\n    case 'dpack':\n      deserialized = dpack.parse(data)\n      break\n    case 'binary':\n      if (runtime === 'node') {\n        data = Buffer.from(data.toString(), 'hex')\n        /* c8 ignore next 3 */\n      } else {\n        data = slowHexToBuffer(data as string) as Buffer\n      }\n      deserialized = decode(data)\n      break\n    default:\n      throw new Error(UNSUPPORTED_FORMAT(format))\n  }\n\n  await load(db, deserialized)\n\n  return db as unknown as T\n}\n\nexport async function persistToFile<T extends AnyOrama>(\n  db: T,\n  format: PersistenceFormat = 'binary',\n  path?: string,\n  runtime?: Runtime\n): Promise<never> {\n  throw new Error(METHOD_MOVED('persistToFile'))\n}\n\nexport async function restoreFromFile<T extends AnyOrama>(\n  format: PersistenceFormat = 'binary',\n  path?: string,\n  runtime?: Runtime\n): Promise<never> {\n  throw new Error(METHOD_MOVED('restoreFromFile'))\n}\n"],"names":["decode","encode","create","load","save","dpack","METHOD_MOVED","UNSUPPORTED_FORMAT","detectRuntime","hexFromMap","a","b","c","d","e","f","hexToMap","Object","keys","slowHexToBuffer","hex","bytes","Uint8Array","Math","floor","length","toLowerCase","i","undefined","slowHexToString","Array","from","map","join","persist","db","format","runtime","dbExport","serialized","JSON","stringify","serialize","msgpack","Buffer","buffer","byteOffset","byteLength","toString","Error","restore","data","schema","__placeholder","deserialized","parse","persistToFile","path","restoreFromFile"],"mappings":"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"}